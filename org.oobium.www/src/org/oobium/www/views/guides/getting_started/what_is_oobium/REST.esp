title REST

p Rest stands for Representational State Transfer and is the foundation of the RESTful architecture. This is 
	+= generally considered to be Roy Fielding’s doctoral thesis, Architectural Styles and the Design of 
	+= Network-based Software Architectures. While you can read through the thesis, REST in terms of Rails boils 
	+= down to two main principles:
ul
	li Using resource identifiers such as URLs to represent resources.
	li Transferring representations of the state of that resource between system components.

p For example, to an Oobium application, a request such as this:
code(style: "margin-left: 20px") DELETE /photos/17
p would be understood to refer to a photo resource with the ID of 17, and to indicate a desired action – deleting
	+= that resource. REST is a natural style for the architecture of web applications, and Rails hooks into this
	+= shielding you from many of the RESTful complexities and browser quirks.
p If you’d like more details on REST as an architectural style, these resources are more approachable than
	+= Fielding’s thesis:
ul
	li
		a("http://www.infoq.com/articles/rest-introduction") A Brief Introduction to REST
		+=  by Stefan Tilkov
	li
		a("http://bitworking.org/news/373/An-Introduction-to-REST") An Introduction to REST
		+=  (video tutorial) by Joe Gregorio
	li
		a("http://en.wikipedia.org/wiki/Representational_State_Transfer") Representational State Transfer
		+= article in Wikipedia
	li
		a("http://www.infoq.com/articles/webber-rest-workflow") How to GET a Cup of Coffee
		+= by Jim Webber, Savas Parastatidis & Ian Robinson
	