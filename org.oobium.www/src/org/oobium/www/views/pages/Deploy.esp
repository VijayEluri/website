title Oobium.org :: Deploy

div#features(style:"margin-top: -60px")
	h2 Automated Deployment
	p Oobium includes the means to deploy your applications to any machine that it can SSH into:
	ul
		li Run "remote deploy" in the Oobium console
			p If you have created a "site.js" file containing the host details, then deployment will happend
				+w automatically. Otherwise, you will be prompted for the relative information.
				+w See the Site section below for more information.
	
	p If your application uses a database, running your migrations on the remote machine is just as easy:
	ul
		li Run "remote migrate" in the Oobium console
	
	h2 Manual Deployment
	p If you prefer, you can also manually deploy your application anywhere you want. Just have Oobium export
		+w it, and then you can move the whole directory (it's ready to run at this point) as you wish.
	ul
		li Run "export" in the Oobium console
			p Upon completion, you'll get a link to the folder containing a newly
				+w created and ready-to-run application.
	
	h2 The Site configuration file
	p The site.js file is in JSON format (though you can leave out the opening and closing braces if you want) and
		+w located in the same package as the application's configuration.js file.
	p Currently, site.js accepts the following fields:
	ul
		li apps (optional)
			p A list of applications which, in addition to the application containing the site.js file, should be
				+w included in the deployment. If omitted, only the containing application will be deployed.
		li host (required)
			p The name of the host, or server, to which to deploy the application. Can be a domain name or IP Address.
		li path (optional)
			p The root path in which to install the application. Can be relative or absolute. If omitted, the application
				+w will be installed in the user's home directory.
		li username (required)
			p The name of the user to use when accessing the remote machine through SSH.
		li password (required)
			p The password of the user to use when accessing the remote machine through SSH.
		li sudo (optional)
			p If set and equal to true, then the remote application will be started as root by using the sudo command.
				+w The user specified by "username" must have sudo privileges (and you should know what you're doing,
				+w as always when using sudo!)
	p For example, an application named com.mydomain.www, might have a site.js like this:
	div.js <- code
		+= apps: [ <span class="javaText">"org.mydomain.www"</span>, <span class="javaText">"com.mydomain.blog"</span> ],\n
		+> 
		+= host:      <span class="javaText">"mydomain.com"</span>,\n
		+= path:      <span class="javaText">"my-apps"</span>,\n
		+= username:  <span class="javaText">"user"</span>,\n
		+= password:  <span class="javaText">"password"</span>,\n
		+= sudo:      <span class="javaKeyword">true</span>