title The Client User Interface

p To create the example SWT client, start by selecting File -> New -> Project... from the Eclipse menu.
	+w This will open a dialog from which you can then select to create a new Plug-in Project.

div <- img("/guides/real_time_swt_client/screenshot-new_project1.png")

p On the next page in the Wizard, fill out the name and choose next:

div <- img("/guides/real_time_swt_client/screenshot-new_project2.png")

p On the final page, de-select "Generate an Activator..." and choose finish:

div <- img("/guides/real_time_swt_client/screenshot-new_project3.png")

p Now we have a basic Java project that can manage its dependencies with OSGi - let's take advantage of that and
	+w add SWT.

p Open up the project's MANIFEST.MF file and, in the Eclipse Manifest editor, choose the Dependencies tab. Here, click
	+w the "Add" button in the "Required Plug-ins" section and use the resulting dialog to add "org.eclipse.swt".
	+w We are now ready to create our primary class.

p To create a new class, choose File -> New -> Class from the Eclipse menu, and fill out the dialog as shown below:

div <- img("/guides/real_time_swt_client/screenshot-new_class.png")

p You'll know have the following code to work with:

div.code <- code.java
		+> package com.test.reader;
		+> 
		+> public class ExampleReader {
		+> 
		+> }

p For this example, we'll be creating a very basic application in one class - this is not the proper way to
	+w create a real SWT application!

p Modify your ExampleReader class to look like the following:

div.code <- code.java
	+> package com.test.reader;
	+> 
	+> import org.eclipse.swt.SWT;
	+> import org.eclipse.swt.graphics.Point;
	+> import org.eclipse.swt.layout.GridData;
	+> import org.eclipse.swt.layout.GridLayout;
	+> import org.eclipse.swt.widgets.Button;
	+> import org.eclipse.swt.widgets.Display;
	+> import org.eclipse.swt.widgets.Label;
	+> import org.eclipse.swt.widgets.Shell;
	+> import org.eclipse.swt.widgets.Table;
	+> import org.eclipse.swt.widgets.TableColumn;
	+> import org.eclipse.swt.widgets.Text;
	+> 
	+> public class ExampleReader {
	+> 
	+>   private static Display display;
	+>   private static Shell shell;
	+>   private static Table table;
	+> 
	+>   public static void main(String[] args) throws Exception {
	+>     // TODO setup persistence
	+> 
	+>     // TODO add Observer
	+> 
	+>     createUI();
	+> 
	+>     // TODO add initial items
	+> 
	+>     runEventLoop();
	+>   }
	+> 
	+>   private static void createUI() {
	+>     display = new Display();
	+>     shell = new Shell(display);
	+>     shell.setLayout(new GridLayout(3, false));
	+>     
	+>     table = new Table(shell, SWT.SINGLE | SWT.BORDER | SWT.FULL_SELECTION);
	+>     table.setLinesVisible(true);
	+>     table.setHeaderVisible(true);
	+>     table.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 3, 1));
	+>     
	+>     TableColumn c = new TableColumn(table, SWT.NONE);
	+>     c.setText("id");
	+>     c.pack();
	+>     
	+>     // TODO add field columns
	+>     
	+>     Label lbl = new Label(shell, SWT.NONE);
	+>     lbl.setText("Title: ");
	+>     lbl.setLayoutData(new GridData(SWT.LEFT, SWT.FILL, false, false));
	+>     
	+>     final Text txt = new Text(shell, SWT.SINGLE | SWT.BORDER);
	+>     txt.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
	+>     
	+>     Button b = new Button(shell, SWT.PUSH);
	+>     b.setText("Create New Post");
	+>     b.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));
	+>     // TODO add selection listener
	+>     
	+>     shell.setSize(new Point(500, 400));
	+>   }
	+>     
	+>   private static void runEventLoop() {
	+>     shell.open();
	+>     while(!shell.isDisposed()) {
	+>       if(!display.readAndDispatch()) {
	+>         display.sleep();
	+>       }
	+>     }
	+>     display.dispose();
	+>     System.exit(0);
	+>   }
	+> 
	+> }

p At this point, you have (most of) the UI created, and are able to run the application. Run it by selecting the class
	+w in the Eclipse Package Manager and then choosing Run -> Run from the Eclipse menu. You should have a simple
	+w application pop up that looks like this:

div <- img("/guides/real_time_swt_client/screenshot-app1.png")


