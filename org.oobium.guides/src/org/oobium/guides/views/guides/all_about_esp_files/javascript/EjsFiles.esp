title EJS Files

p The final form of the script tag is used to import an EJS file.

p An EJS file is essentially just the script tag from an ESP file. In other words, it is an ESP file whose content
	+w is only Javascript (and therefore does not need the script tag). For example, the Javascript from the previous
	+w section could be in an EJS file called, Scripts.ejs, like so:

div.code <- code
	+= <span class="javaKeyword">Scripts</span>(String favcolor = <span class="javaText">"blue"</span>)\n
	+= \n
	+= var object = {\n
	+=   color := favcolor\n
	+= }\n

p This EJS file can be included in a view using the script tag as follows:

div.code <- code
	+ <span class="espTag">script</span>{"<Scripts>"} <span class="javaComment">// using the default, no-args, constructor</span>\n
	+ <span class="espTag">script</span>{"<Scripts>"}("green")

p This form of the script tag uses the "{"<Type>"}" element part just like we saw with the view tag. It can do this
	+w because EJS files are just like ESP files and are also compiled to Java in the same way.

p When used in this form, the script tag can also accept a parameter to designate whether or not the EJS file is to
	+w be included as inline Javascript or as a link to the external file:

div.code <- code.java
	+= <span class="espTag">head</span>\n
	+ <span class="espTab">  </span><span class="espTag">script</span>{"<Scripts>"} <span class="javaComment">// in head, the default is a link to an external script sheet</span>\n
	+ <span class="espTab">  </span><span class="espTag">script</span>{"<Scripts>"}(inline: true) <span class="javaComment">// override to make inline</span>\n
	+> 
	+= <span class="espTag">body</span>\n
	+ <span class="espTab">  </span><span class="espTag">script</span>{"<Scripts>"} <span class="javaComment">// in body, the default is inline</span>\n
	+ <span class="espTab">  </span><span class="espTag">script</span>{"<Scripts>"}(inline: false) <span class="javaComment">// override to make a link to an external script sheet</span>\n

