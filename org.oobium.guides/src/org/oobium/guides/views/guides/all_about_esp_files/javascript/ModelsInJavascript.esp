title Models in Javascript

p Since Oobium is an MVC type of framework, you've probably spent some time creating a nice
	+w collection of models. Wouldn't it be nice to use those same models in your JavaScript?

p Code like this can really speed up your development:

div.code <- code
	+= Post.find(1, <span class="javaKeyword">function</span>(post) {\n
	+>   post.setTitle(title);
	+>   post.save();
	+> });

p Oobium supports creating a simple JavaScript version of your models - in the Oobium console
	+w run the command:

div.code <- code $ create client

p This will generate a models.js file, in your assets/scripts folder, which can then be included
	+w in a manner similar to that of other external JavaScript files, only this time using the
	+w "models" keyword:

div.code <- code
	+= <span class="espTag">script</span>(models)

p When the ESP is compiled, this will create a script tag to include the models.js file, as well
	+w as the JavaScript required to instantiate a JavaScript router object that is initialized with
	+w your application's current model routes:

div.code <- code
	+> <script src="/models.js"></script>
	+> <script>$Router=new Router({"...snip..."});</script>

p Note that you won't have to publish any of your routes first, but this will effectively be
	+w publishing them for anyone that wants to parse the JSON. Of course, this shouldn't be a problem
	+w since I'm sure that security by obscurity isn't your thing.

div.note
	+w The generated JavaScript models require JQuery - make sure to include it when using this feature.
