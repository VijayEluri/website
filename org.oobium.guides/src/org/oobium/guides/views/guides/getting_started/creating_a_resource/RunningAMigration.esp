title Running a Migration

p Back when we created the application we also said to create a Migration project.  Now's the time to
	+w a look at what that was all about.

p The Migration project is closely related to your regular Oobium application and exists solely to help you setup
	+w and manage its persistent storage (typically a database).  It does this by creating <i>migrations</i>.
	+w Migrations are Java classes that are designed to make it simple to create and modify database tables.
	+w Oobium uses its console to run migrations, and it's possible to undo a migration after it's been applied to
	+w your database.  The order that migrations are processed is set in the <code>Migrator</code> class, which
	+w can be found at the root of the Migrator project.  The Migrator can also be opened using the console:

div.code <- code $ open migrator

p The Migrator contains a single method - addMigrations - that allows you set the migrations to be processed, and the order in
	+w which to process them:

div.code <- code.java
	+> package com.test.blog.migrator;
	+> 
	+> import com.test.blog.migrator.migrations.CreateDatabase;
	+> import org.oobium.persist.migrate.Migrations;
	+> import org.oobium.persist.migrate.db.DbMigratorService;
	+> 
	+> public class Migrator extends DbMigratorService {
	+> 
	+> 	@Override
	+> 	public void addMigrations(Migrations migrations) {
	+> 		migrations.add(CreateDatabase.class);
	+> 	}
	+> 
	+> }

p Initially there is only one migration, and it is intended to be used for just what its name implies: create
	+w the database.  If you open it up, here's what you'll find:

div.code <- code.java
	+> package com.test.blog.migrator.migrations;
	+> 
	+> import java.sql.SQLException;
	+> import org.oobium.persist.migrate.db.AbstractDbMigration;
	+> 
	+> public class CreateDatabase extends AbstractDbMigration {
	+> 
	+> 	@Override
	+> 	public void up() throws SQLException {
	+> 		createTable("posts",
	+> 			String("name"),
	+> 			String("title"),
	+> 			Text("content"),
	+> 			Timestamps()
	+> 		);
	+> 	}
	+> 
	+> 	@Override
	+> 	public void down() throws SQLException {
	+> 		dropTable("posts");
	+> 	}
	+> 
	+> }

p The above migration creates two methods, up, which is called when you run this migration forward,
	+w and down, in case you need to reverse the changes made by this migration at a later date. The up method
	+w in this case create the table "posts" with the columns corresponding to the model, and the down method
	+w simply drops the "posts" table. More information about Oobium migrations can be found in the 
	a("/oobium_database_migrations") Oobium Database Migrations
	+w guide.

p At this point, you can use a console command to run the migration:

div.code <- code $ migrate

div.note The server must be running to perform a migration. If you stopped it, or are picking up this guide in the
	+w middle then you'll need to start it up by issuing the "start" command in the Oobium console.

p Oobium will execute this migration command and tell you whether it completed successfully or not.

div.note
	+w Because you're working in the development environment by default, this command will apply to the
	+w database defined in the development section of your configuration.js file.

