title Deleting Comments

p Another important feature on a blog is being able to delete SPAM comments. To do this, we need to implement a
	+w link of some sort in the view and a destroy method in the CommentController.

p So first, let’s add the destroy link in the comments/ShowComment.esp view:

div.code <- code
	+> import com.test.blog.models.*
	+> 
	+> ShowComment(Comment comment)
	+> 
	+> p <b>Commenter:</b> { comment.getCommenter() }
	+> p <b>Comment:</b> { comment.getBody() }
	+> 
	+> a(comment, destroy) Destroy Comment

p Clicking this new "Destroy Comment" link will fire off a DELETE request to the path of the given comment, which will
	+w get routed to the destroy method of our CommentsController. So, let’s add that destroy method now:

div.code <- code.java
	+> package com.test.blog.controllers;
	+> 
	+= import static org.oobium.http.constants.Action.<span class="javaStaticField">show</span>\n
	+> 
	+> import java.sql.SQLException;
	+> 
	+> import com.test.blog.models.Comment;
	+> 
	+> public class CommentController extends ApplicationController {
	+> 
	+>   @Override
	+>   public void create() throws SQLException {
	+>     Comment comment = param("comment", new Comment());
	+>     if(comment.create()) {
	+=       redirectTo(comment.getPost(), <span class="javaStaticField">show</span>);\n
	+>     }
	+>   }
	+> 
	+>   @Override
	+>   public void destroy() throws SQLException {
	+>     Comment comment = Comment.find(getId());
	+>     Post post = comment.getPost();
	+>     if(comment.destroy()) {
	+=       redirectTo(post, <span class="javaStaticField">show</span>);\n
	+>     }
	+>   }
	+> 
	+> }

p The destroy method will find the comment with the correct id and post fields, and then remove it from the database
	+w and send us back to the show action for the post.

p Before this will work though, we need to add another route - the one to handle destroying comments! The hasMany
	+w routes that we used earlier did't add singular routes for the model because that could quickly create a lot of
	+w redundant routing that would just take up memory and probably not be what you were intending. To explicitly add
	+w the necessary route, open up the Activator again ($ open activator) and add the following:

div.code <- code.java
	+= router.addResource(Comment.class, <span class="javaStaticField">destroy</span>);

div.note(style:"margin-top: 15px")
	+= Note that <span class="javaStaticField">destroy</span> is statically imported