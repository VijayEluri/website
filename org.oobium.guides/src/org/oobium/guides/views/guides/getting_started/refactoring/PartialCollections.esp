PartialCollections(String title = "Partial Collections")

title {title}

p First we will make a comment view to extract showing all the comments for the post. Create the view
	+w comments/ShowComment:

div.code <- code $ create view comments/ShowComment

p Note that this will create an ESP file, ShowComment.esp, in the views/comments folder.
	br
	+= Open this file and put the following into it:

div.code <- code
	+= <span class="javaKeyword">import</span> com.test.blog.models.*\n
	+= \n
	+= <span class="javaKeyword">ShowComment</span>(Comment comment)\n
	+= \n
	+= <span class="espTag">p</span> <span class="javaKeyword"><-</span> <span class="espTag">b</span> <span class="espIText">Commenter:</span> { comment.getCommenter() }\n
	+= <span class="espTag">p</span> <span class="javaKeyword"><-</span> <span class="espTag">b</span> <span class="espIText">Comment:</span> { comment.getBody() }\n

p Then, in the posts/ShowPost.esp you can change it to look like the following:

div.code <- code
	+= <span class="javaKeyword">import</span> com.test.blog.models.*\n
	+= <span class="javaKeyword">import</span> com.test.blog.views.comments.*\n
	+= \n
	+= <span class="javaKeyword">ShowPost</span>(Post post)\n
	+= \n
	+= <span class="espTag">p</span>\n
	+= <span class="espTab">  </span><span class="espTag">b</span> Name:</span>\n
	+= <span class="espTab">  </span><span class="espIText">+</span>  { post.getName() }\n
	+= <span class="espTag">p</span>\n
	+= <span class="espTab">  </span><span class="espTag">b</span> Title:</span>\n
	+= <span class="espTab">  </span><span class="espIText">+</span>  { post.getTitle() }\n
	+= <span class="espTag">p</span>\n
	+= <span class="espTab">  </span><span class="espTag">b</span> Content:</span>\n
	+= <span class="espTab">  </span><span class="espIText">+</span>  { post.getContent() }\n
	+= <span class="espTag">p</span>\n
	+= <span class="espTab">  </span><span class="espTag">b</span> Created At:</span>\n
	+= <span class="espTab">  </span><span class="espIText">+</span> { psst.getCreatedAt() }\n
	+= <span class="espTag">p</span>\n
	+= <span class="espTab">  </span><span class="espTag">b</span> Updated At:</span>\n
	+= <span class="espTab">  </span><span class="espIText">+</span> { post.getUpdatedAt() }\n
	+= \n
	+= <span class="espTag">h2</span> Comments</span>\n
	+= <span class="espTag">view</span>
	+ {"<ShowComment>"}
	+= (Comment: post.comments())\n
	+= \n
	+= <span class="espTag">h2</span> Add a comment:</span>\n
	+= <span class="espTag">form</span>(post, "comments"</span>)\n
	+= <span class="espTab">  </span><span class="espTag">hidden</span>(post, value: {f post })\n
	+= <span class="espTab">  </span><span class="espTag">div</span>.field\n
	+= <span class="espTab">    </span><span class="espTag">label</span>(<span class="javaText">"commenter"</span>)\n
	+= <span class="espTab">    </span><span class="espTag">text</span>(<span class="javaText">"commenter"</span>)\n
	+= <span class="espTab">  </span><span class="espTag">div</span>.field\n
	+= <span class="espTab">    </span><span class="espTag">label</span>(<span class="javaText">"body"</span>)\n
	+= <span class="espTab">    </span><span class="espTag">text</span>(<span class="javaText">"body"</span>)\n
	+= <span class="espTab">  </span><span class="espTag">div</span>.actions\n
	+= <span class="espTab">    </span><span class="espTag">submit</span>\n
	+= \n
	+= <span class="espTag">a</span>(post, showEdit) <span class="espIText">Edit</span>\n
	+= <span class="espTag">span</span> <span class="espIText"> | </span>\n
	+= <span class="espTag">a</span>(Post.class, showAll) <span class="espIText">Back</span>\n

p This will now render the partial in comments/ShowComment.esp once for each comment that is in the
	+w post.comments() collection. As the render method iterates over the post.comments() collection, it creates
	+w a new instance of the ShowComment view, and passes in the element of the collection, cast to the type
	+w specified by the entry key ("Comment" in this case). This will actually work beyond just collections - any
	+w class that implements Iterable or any array.
